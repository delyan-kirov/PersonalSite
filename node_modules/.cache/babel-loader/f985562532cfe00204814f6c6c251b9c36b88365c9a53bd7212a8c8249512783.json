{"ast":null,"code":"import React from\"react\";import\"./Styles.css\";import TopBar from\"../TopBar/TopBar\";import TikzPicture from\"./mytikzpicture.png\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const FullPanel1=()=>{return/*#__PURE__*/_jsxs(\"div\",{className:\"blogBody\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"TopBar\",children:/*#__PURE__*/_jsx(TopBar,{})}),/*#__PURE__*/_jsx(\"div\",{style:{margin:'36px'}}),/*#__PURE__*/_jsxs(\"div\",{id:\"content\",className:\"content\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"title\",children:\"Using tikz in org\"}),/*#__PURE__*/_jsxs(\"div\",{id:\"outline-container-orgcc7d50f\",className:\"outline-2\",children:[/*#__PURE__*/_jsxs(\"h2\",{id:\"orgcc7d50f\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"section-number-2\",children:\"1.\"}),\" Haskell basics\"]}),/*#__PURE__*/_jsx(\"div\",{className:\"outline-text-2\",id:\"text-1\"}),/*#__PURE__*/_jsxs(\"div\",{id:\"outline-container-org1a868d1\",className:\"outline-3\",children:[/*#__PURE__*/_jsxs(\"h3\",{id:\"org1a868d1\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"section-number-3\",children:\"1.1.\"}),\" Types and variables\"]}),/*#__PURE__*/_jsxs(\"div\",{className:\"outline-text-3\",id:\"text-1-1\",children:[/*#__PURE__*/_jsx(\"p\",{children:\"Haskell is simple, there are Types and variables of those types.\"}),/*#__PURE__*/_jsx(\"div\",{className:\"org-src-container\",children:/*#__PURE__*/_jsxs(\"pre\",{className:\"src src-haskell\",children:[/*#__PURE__*/_jsx(\"span\",{style:{color:'#51587a'},children:\"-- \"}),/*#__PURE__*/_jsx(\"span\",{style:{color:'#51587a'},children:\"Assigning 1 to a\"}),\"\\n\",/*#__PURE__*/_jsx(\"span\",{style:{color:'#7aa2f7'},children:\"a\"}),\" \",/*#__PURE__*/_jsx(\"span\",{style:{color:'#c0caf5'},children:\"=\"}),\" \",/*#__PURE__*/_jsx(\"span\",{style:{color:'#ff9e64',fontWeight:'bold'},children:\"1\"}),\" \",/*#__PURE__*/_jsx(\"span\",{style:{color:'#c0caf5'},children:\"::\"}),\" \",/*#__PURE__*/_jsx(\"span\",{style:{color:'#c0caf5'},children:\"Int\"}),\"\\n\",/*#__PURE__*/_jsx(\"span\",{style:{color:'#51587a'},children:\"-- \"}),/*#__PURE__*/_jsx(\"span\",{style:{color:'#51587a'},children:\"We can omit the type declaration\"}),\"\\n\",/*#__PURE__*/_jsx(\"span\",{style:{color:'#7aa2f7'},children:\"b\"}),\" \",/*#__PURE__*/_jsx(\"span\",{style:{color:'#c0caf5'},children:\"=\"}),\" \",/*#__PURE__*/_jsx(\"span\",{style:{color:'#ff9e64',fontWeight:'bold'},children:\"1\"}),\"\\n\",/*#__PURE__*/_jsx(\"span\",{style:{color:'#51587a'},children:\"-- \"}),/*#__PURE__*/_jsx(\"span\",{style:{color:'#51587a'},children:\"We can also define the type\"}),\"\\n\",/*#__PURE__*/_jsx(\"span\",{style:{color:'#7aa2f7'},children:\"c\"}),\" \",/*#__PURE__*/_jsx(\"span\",{style:{color:'#c0caf5'},children:\"::\"}),\" \",/*#__PURE__*/_jsx(\"span\",{style:{color:'#c0caf5'},children:\"Int\"}),\"\\n\",/*#__PURE__*/_jsx(\"span\",{style:{color:'#51587a'},children:\"-- \"}),/*#__PURE__*/_jsx(\"span\",{style:{color:'#51587a'},children:\"and assign latter\"}),\"\\n\",/*#__PURE__*/_jsx(\"span\",{style:{color:'#7aa2f7'},children:\"c\"}),\" \",/*#__PURE__*/_jsx(\"span\",{style:{color:'#c0caf5'},children:\"=\"}),\" \",/*#__PURE__*/_jsx(\"span\",{style:{color:'#ff9e64',fontWeight:'bold'},children:\"1\"}),\"\\n\"]})}),/*#__PURE__*/_jsx(\"p\",{children:\"What about functions? Those are not too special, functions are values of type Input -> Output\"}),/*#__PURE__*/_jsx(\"div\",{className:\"org-src-container\",children:/*#__PURE__*/_jsxs(\"pre\",{className:\"src src-haskell\",children:[/*#__PURE__*/_jsx(\"span\",{style:{color:'#51587a'},children:\"-- \"}),/*#__PURE__*/_jsx(\"span\",{style:{color:'#51587a'},children:\"Anotate and define\"}),\"\\n\",/*#__PURE__*/_jsx(\"span\",{style:{color:'#7aa2f7'},children:\"f\"}),\" \",/*#__PURE__*/_jsx(\"span\",{style:{color:'#c0caf5'},children:\"::\"}),\" \",/*#__PURE__*/_jsx(\"span\",{style:{color:'#c0caf5'},children:\"Int\"}),\" \",/*#__PURE__*/_jsx(\"span\",{style:{color:'#c0caf5'},children:\"->\"}),\" \",/*#__PURE__*/_jsx(\"span\",{style:{color:'#c0caf5'},children:\"Int\"}),\"\\n\",/*#__PURE__*/_jsx(\"span\",{style:{color:'#7aa2f7'},children:\"f\"}),\" x \",/*#__PURE__*/_jsx(\"span\",{style:{color:'#c0caf5'},children:\"=\"}),\" x \",/*#__PURE__*/_jsx(\"span\",{style:{color:'#c0caf5'},children:\"+\"}),\" \",/*#__PURE__*/_jsx(\"span\",{style:{color:'#ff9e64',fontWeight:'bold'},children:\"1\"}),\"\\n\",/*#__PURE__*/_jsx(\"span\",{style:{color:'#51587a'},children:\"-- \"}),/*#__PURE__*/_jsx(\"span\",{style:{color:'#51587a'},children:\"Define without anotating\"}),\"\\n\",/*#__PURE__*/_jsx(\"span\",{style:{color:'#7aa2f7'},children:\"g\"}),\" x \",/*#__PURE__*/_jsx(\"span\",{style:{color:'#c0caf5'},children:\"=\"}),\" x \",/*#__PURE__*/_jsx(\"span\",{style:{color:'#c0caf5'},children:\"+\"}),\" \",/*#__PURE__*/_jsx(\"span\",{style:{color:'#ff9e64',fontWeight:'bold'},children:\"1\"}),\"\\n\"]})}),/*#__PURE__*/_jsx(\"p\",{children:\"You can think of -> as a type constructor. Other type constructors pre-built are\"}),/*#__PURE__*/_jsx(\"div\",{className:\"org-src-container\",children:/*#__PURE__*/_jsxs(\"pre\",{className:\"src src-haskell\",children:[/*#__PURE__*/_jsx(\"span\",{style:{color:'#51587a'},children:\"-- \"}),/*#__PURE__*/_jsx(\"span\",{style:{color:'#51587a'},children:\"The pair constructor\"}),\"\\n\",/*#__PURE__*/_jsx(\"span\",{style:{color:'#7aa2f7'},children:\"a\"}),\" \",/*#__PURE__*/_jsx(\"span\",{style:{color:'#c0caf5'},children:\"=\"}),\" \",/*#__PURE__*/_jsx(\"span\",{style:{color:'#a9b1d6'},children:\"(\"}),/*#__PURE__*/_jsx(\"span\",{style:{color:'#c0caf5'},children:\",\"}),/*#__PURE__*/_jsx(\"span\",{style:{color:'#a9b1d6'},children:\")\"}),\" \",/*#__PURE__*/_jsx(\"span\",{style:{color:'#ff9e64',fontWeight:'bold'},children:\"1\"}),\", \",/*#__PURE__*/_jsx(\"span\",{style:{color:'#ff9e64',fontWeight:'bold'},children:\"2\"}),\"\\n\",\"\\n\",/*#__PURE__*/_jsx(\"span\",{style:{color:'#51587a'},children:\"-- \"}),/*#__PURE__*/_jsx(\"span\",{style:{color:'#51587a'},children:\"We can also use it to define triples\"}),\"\\n\",/*#__PURE__*/_jsx(\"span\",{style:{color:'#7aa2f7'},children:\"b\"}),\" \",/*#__PURE__*/_jsx(\"span\",{style:{color:'#c0caf5'},children:\"=\"}),\" \",/*#__PURE__*/_jsx(\"span\",{style:{color:'#a9b1d6'},children:\"(\"}),/*#__PURE__*/_jsx(\"span\",{style:{color:'#c0caf5'},children:\",\"}),/*#__PURE__*/_jsx(\"span\",{style:{color:'#a9b1d6'},children:\")\"}),\" \",/*#__PURE__*/_jsx(\"span\",{style:{color:'#a9b1d6'},children:\"(\"}),\" \",/*#__PURE__*/_jsx(\"span\",{style:{color:'#7aa2f7'},children:\"(\"}),/*#__PURE__*/_jsx(\"span\",{style:{color:'#c0caf5'},children:\",\"}),/*#__PURE__*/_jsx(\"span\",{style:{color:'#7aa2f7'},children:\")\"}),\" \",/*#__PURE__*/_jsx(\"span\",{style:{color:'#ff9e64',fontWeight:'bold'},children:\"1\"}),\" \",/*#__PURE__*/_jsx(\"span\",{style:{color:'#ff9e64',fontWeight:'bold'},children:\"2\"}),/*#__PURE__*/_jsx(\"span\",{style:{color:'#a9b1d6'},children:\")\"}),\" \",/*#__PURE__*/_jsx(\"span\",{style:{color:'#ff9e64',fontWeight:'bold'},children:\"3\"}),\"\\n\",\"\\n\",/*#__PURE__*/_jsx(\"span\",{style:{color:'#51587a'},children:\"-- \"}),/*#__PURE__*/_jsx(\"span\",{style:{color:'#51587a'},children:\"These constructors also have sugarful declarations\"}),\"\\n\",/*#__PURE__*/_jsx(\"span\",{style:{color:'#7aa2f7'},children:\"a'\"}),\" \",/*#__PURE__*/_jsx(\"span\",{style:{color:'#c0caf5'},children:\"=\"}),\" \",/*#__PURE__*/_jsx(\"span\",{style:{color:'#a9b1d6'},children:\"(\"}),/*#__PURE__*/_jsx(\"span\",{style:{color:'#ff9e64',fontWeight:'bold'},children:\"1\"}),\", \",/*#__PURE__*/_jsx(\"span\",{style:{color:'#ff9e64',fontWeight:'bold'},children:\"2\"}),/*#__PURE__*/_jsx(\"span\",{style:{color:'#a9b1d6'},children:\")\"}),\"\\n\",/*#__PURE__*/_jsx(\"span\",{style:{color:'#7aa2f7'},children:\"b'\"}),\" \",/*#__PURE__*/_jsx(\"span\",{style:{color:'#c0caf5'},children:\"=\"}),\" \",/*#__PURE__*/_jsx(\"span\",{style:{color:'#a9b1d6'},children:\"(\"}),/*#__PURE__*/_jsx(\"span\",{style:{color:'#ff9e64',fontWeight:'bold'},children:\"1\"}),\", \",/*#__PURE__*/_jsx(\"span\",{style:{color:'#ff9e64',fontWeight:'bold'},children:\"2\"}),\", \",/*#__PURE__*/_jsx(\"span\",{style:{color:'#ff9e64',fontWeight:'bold'},children:\"3\"}),/*#__PURE__*/_jsx(\"span\",{style:{color:'#a9b1d6'},children:\")\"}),\"\\n\",\"\\n\",/*#__PURE__*/_jsx(\"span\",{style:{color:'#51587a'},children:\"-- \"}),/*#__PURE__*/_jsx(\"span\",{style:{color:'#51587a'},children:\"Lists can be constructed with :\"}),\"\\n\",/*#__PURE__*/_jsx(\"span\",{style:{color:'#7aa2f7'},children:\"foo\"}),\" \",/*#__PURE__*/_jsx(\"span\",{style:{color:'#c0caf5'},children:\"=\"}),\" \",/*#__PURE__*/_jsx(\"span\",{style:{color:'#ff9e64',fontWeight:'bold'},children:\"1\"}),/*#__PURE__*/_jsx(\"span\",{style:{color:'#c0caf5'},children:\":\"}),/*#__PURE__*/_jsx(\"span\",{style:{color:'#ff9e64',fontWeight:'bold'},children:\"2\"}),/*#__PURE__*/_jsx(\"span\",{style:{color:'#c0caf5'},children:\":\"}),/*#__PURE__*/_jsx(\"span\",{style:{color:'#ff9e64',fontWeight:'bold'},children:\"3\"}),/*#__PURE__*/_jsx(\"span\",{style:{color:'#c0caf5'},children:\":\"}),/*#__PURE__*/_jsx(\"span\",{style:{color:'#a9b1d6'},children:\"[]\"}),\"\\n\",/*#__PURE__*/_jsx(\"span\",{style:{color:'#51587a'},children:\"-- \"}),/*#__PURE__*/_jsx(\"span\",{style:{color:'#51587a'},children:\"We also have sugarful notation\"}),\"\\n\",/*#__PURE__*/_jsx(\"span\",{style:{color:'#7aa2f7'},children:\"foo'\"}),\" \",/*#__PURE__*/_jsx(\"span\",{style:{color:'#c0caf5'},children:\"=\"}),\" \",/*#__PURE__*/_jsx(\"span\",{style:{color:'#a9b1d6'},children:\"[\"}),/*#__PURE__*/_jsx(\"span\",{style:{color:'#ff9e64',fontWeight:'bold'},children:\"1\"}),\", \",/*#__PURE__*/_jsx(\"span\",{style:{color:'#ff9e64',fontWeight:'bold'},children:\"2\"}),\", \",/*#__PURE__*/_jsx(\"span\",{style:{color:'#ff9e64',fontWeight:'bold'},children:\"3\"}),/*#__PURE__*/_jsx(\"span\",{style:{color:'#a9b1d6'},children:\"]\"}),\"\\n\"]})}),/*#__PURE__*/_jsxs(\"p\",{children:[\"In general we can define custom pairs, using the\",\" \",/*#__PURE__*/_jsx(\"b\",{children:/*#__PURE__*/_jsx(\"b\",{children:\"data\"})}),\" \",\"key word\"]}),/*#__PURE__*/_jsx(\"div\",{className:\"org-src-container\",children:/*#__PURE__*/_jsxs(\"pre\",{className:\"src src-haskell\",children:[/*#__PURE__*/_jsx(\"span\",{style:{color:'#51587a'},children:\"-- \"}),/*#__PURE__*/_jsx(\"span\",{style:{color:'#51587a'},children:\"Here we use data to start constructing\"}),\"\\n\",/*#__PURE__*/_jsx(\"span\",{style:{color:'#bb9af7'},children:\"data\"}),\" \",/*#__PURE__*/_jsx(\"span\",{style:{color:'#c0caf5'},children:\"Person\"}),\" \",/*#__PURE__*/_jsx(\"span\",{style:{color:'#c0caf5'},children:\"=\"}),\" \",/*#__PURE__*/_jsx(\"span\",{style:{color:'#c0caf5'},children:\"Person\"}),\" \",/*#__PURE__*/_jsx(\"span\",{style:{color:'#c0caf5'},children:\"Int\"}),\" \",/*#__PURE__*/_jsx(\"span\",{style:{color:'#c0caf5'},children:\"String\"}),\"\\n\",/*#__PURE__*/_jsx(\"span\",{style:{color:'#51587a'},children:\"-- \"}),/*#__PURE__*/_jsx(\"span\",{style:{color:'#51587a'},children:\"The constructor of the type Person is a function called Person\"}),\"\\n\",/*#__PURE__*/_jsx(\"span\",{style:{color:'#51587a'},children:\"-- \"}),/*#__PURE__*/_jsx(\"span\",{style:{color:'#51587a'},children:\"It takes two parameters, an integer and a string and produces a person\"}),\"\\n\",\"\\n\",/*#__PURE__*/_jsx(\"span\",{style:{color:'#51587a'},children:\"-- \"}),/*#__PURE__*/_jsxs(\"span\",{style:{color:'#51587a'},children:[\"We can of course create a variable of type person\",\"  \"]}),\"\\n\",/*#__PURE__*/_jsx(\"span\",{style:{color:'#7aa2f7'},children:\"newPerson\"}),\" \",/*#__PURE__*/_jsx(\"span\",{style:{color:'#c0caf5'},children:\"=\"}),\" \",/*#__PURE__*/_jsx(\"span\",{style:{color:'#c0caf5'},children:\"Person\"}),\" \",/*#__PURE__*/_jsx(\"span\",{style:{color:'#ff9e64',fontWeight:'bold'},children:\"21\"}),\" \",/*#__PURE__*/_jsx(\"span\",{style:{color:'#9ece6a'},children:\"\\\"John\\\"\"}),\"\\n\",\"\\n\",/*#__PURE__*/_jsx(\"span\",{style:{color:'#51587a'},children:\"-- \"}),/*#__PURE__*/_jsx(\"span\",{style:{color:'#51587a'},children:\"It's often convenient to give accessing functions, records can be used for this.\"}),\"\\n\",/*#__PURE__*/_jsx(\"span\",{style:{color:'#51587a'},children:\"-- \"}),/*#__PURE__*/_jsx(\"span\",{style:{color:'#51587a'},children:\"Instead of the following:\"}),\"\\n\",/*#__PURE__*/_jsx(\"span\",{style:{color:'#7aa2f7'},children:\"person_name\"}),\" \",/*#__PURE__*/_jsx(\"span\",{style:{color:'#c0caf5'},children:\"Person\"}),\" age name \",/*#__PURE__*/_jsx(\"span\",{style:{color:'#c0caf5'},children:\"=\"}),\" name\",\"\\n\",/*#__PURE__*/_jsx(\"span\",{style:{color:'#7aa2f7'},children:\"person_age\"}),\" \",/*#__PURE__*/_jsx(\"span\",{style:{color:'#c0caf5'},children:\"Person\"}),\" age name \",/*#__PURE__*/_jsx(\"span\",{style:{color:'#c0caf5'},children:\"=\"}),\" age\",\"\\n\",\"\\n\",/*#__PURE__*/_jsx(\"span\",{style:{color:'#51587a'},children:\"-- \"}),/*#__PURE__*/_jsx(\"span\",{style:{color:'#51587a'},children:\"We can just define them right away:\"}),\"\\n\",/*#__PURE__*/_jsx(\"span\",{style:{color:'#bb9af7'},children:\"data\"}),\" \",/*#__PURE__*/_jsx(\"span\",{style:{color:'#c0caf5'},children:\"Human\"}),\" \",/*#__PURE__*/_jsx(\"span\",{style:{color:'#c0caf5'},children:\"=\"}),\" \",/*#__PURE__*/_jsx(\"span\",{style:{color:'#c0caf5'},children:\"Human\"}),\" \",/*#__PURE__*/_jsx(\"span\",{style:{color:'#a9b1d6'},children:\"{\"}),\"  \",\"age\",\"  \",/*#__PURE__*/_jsx(\"span\",{style:{color:'#c0caf5'},children:\"::\"}),\" \",/*#__PURE__*/_jsx(\"span\",{style:{color:'#c0caf5'},children:\"Int\"}),\"\\n\",\"                          \",\", name \",/*#__PURE__*/_jsx(\"span\",{style:{color:'#c0caf5'},children:\"::\"}),\" \",/*#__PURE__*/_jsx(\"span\",{style:{color:'#c0caf5'},children:\"String\"}),\" \",/*#__PURE__*/_jsx(\"span\",{style:{color:'#a9b1d6'},children:\"}\"}),\"\\n\"]})}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Instead of just pairs, we can also define so called tagged unions. These are like a union of types, except that each type in the union needs it's own named constructor. For example,\",\" \",/*#__PURE__*/_jsx(\"b\",{children:/*#__PURE__*/_jsx(\"b\",{children:\"Foo = Bar Int | Baz\"})}),\" \",\"Double. In this examole, a variable\",\" \",/*#__PURE__*/_jsx(\"b\",{children:/*#__PURE__*/_jsx(\"b\",{children:\"foo :: Foo\"})}),\" \",\"is either a Bar Int or a Baz Double, not both. Note that the constructors Baz and Bar distinguish what is the left and right value. So\",\" \",/*#__PURE__*/_jsx(\"b\",{children:/*#__PURE__*/_jsx(\"b\",{children:\"foo = Bar 1\"})}),\", does not mean that\",\" \",/*#__PURE__*/_jsx(\"b\",{children:/*#__PURE__*/_jsx(\"b\",{children:\"foo\"})}),\" \",\"is of type Int, or of type Bar Int. If you have\",\" \",/*#__PURE__*/_jsx(\"b\",{children:/*#__PURE__*/_jsx(\"b\",{children:\"data Myvar = LeftVar Int | RightVar Int\"})}),\", then the left integer is distinct from the right. Therefore, it's better to think of tagged unions as generating multi-sets, where different values of the same type are distinguished by constructors. In haskell, types can be recursive, this makes it possible to define lists as follows:\"]}),/*#__PURE__*/_jsx(\"div\",{className:\"org-src-container\",children:/*#__PURE__*/_jsxs(\"pre\",{className:\"src src-haskell\",children:[/*#__PURE__*/_jsx(\"span\",{style:{color:'#bb9af7'},children:\"data\"}),\" \",/*#__PURE__*/_jsx(\"span\",{style:{color:'#a9b1d6'},children:\"[\"}),/*#__PURE__*/_jsx(\"span\",{style:{color:'#c0caf5'},children:\"A\"}),/*#__PURE__*/_jsx(\"span\",{style:{color:'#a9b1d6'},children:\"]\"}),\" \",/*#__PURE__*/_jsx(\"span\",{style:{color:'#c0caf5'},children:\"=\"}),\" \",/*#__PURE__*/_jsx(\"span\",{style:{color:'#a9b1d6'},children:\"[]\"}),\" \",/*#__PURE__*/_jsx(\"span\",{style:{color:'#c0caf5'},children:\"|\"}),\" cons \",/*#__PURE__*/_jsx(\"span\",{style:{color:'#a9b1d6'},children:\"(\"}),\"a \",/*#__PURE__*/_jsx(\"span\",{style:{color:'#c0caf5'},children:\"::\"}),\" \",/*#__PURE__*/_jsx(\"span\",{style:{color:'#c0caf5'},children:\"A\"}),/*#__PURE__*/_jsx(\"span\",{style:{color:'#a9b1d6'},children:\")\"}),\"\\n\",/*#__PURE__*/_jsx(\"span\",{style:{color:'#51587a'},children:\"-- \"}),/*#__PURE__*/_jsx(\"span\",{style:{color:'#51587a'},children:\"The cons constructor is replaced by the operator :\"}),\"\\n\",/*#__PURE__*/_jsx(\"span\",{style:{color:'#7aa2f7'},children:\"cons\"}),\" a rest \",/*#__PURE__*/_jsx(\"span\",{style:{color:'#c0caf5'},children:\"=\"}),\" a\",/*#__PURE__*/_jsx(\"span\",{style:{color:'#c0caf5'},children:\":\"}),\"rest\",\"\\n\",/*#__PURE__*/_jsx(\"span\",{style:{color:'#51587a'},children:\"-- \"}),/*#__PURE__*/_jsx(\"span\",{style:{color:'#51587a'},children:\"Here are some examples\"}),\"\\n\",/*#__PURE__*/_jsx(\"span\",{style:{color:'#7aa2f7'},children:\"myList1\"}),\" \",/*#__PURE__*/_jsx(\"span\",{style:{color:'#c0caf5'},children:\"=\"}),\" \",/*#__PURE__*/_jsx(\"span\",{style:{color:'#a9b1d6'},children:\"(\"}),\"cons \",/*#__PURE__*/_jsx(\"span\",{style:{color:'#ff9e64',fontWeight:'bold'},children:\"1\"}),\" \",/*#__PURE__*/_jsx(\"span\",{style:{color:'#7aa2f7'},children:\"(\"}),\"cons \",/*#__PURE__*/_jsx(\"span\",{style:{color:'#ff9e64',fontWeight:'bold'},children:\"2\"}),\" \",/*#__PURE__*/_jsx(\"span\",{style:{color:'#ff9e64'},children:\"(\"}),\"cons \",/*#__PURE__*/_jsx(\"span\",{style:{color:'#ff9e64',fontWeight:'bold'},children:\"3\"}),\" \",/*#__PURE__*/_jsx(\"span\",{style:{color:'#73daca'},children:\"[]\"}),/*#__PURE__*/_jsx(\"span\",{style:{color:'#ff9e64'},children:\")\"}),/*#__PURE__*/_jsx(\"span\",{style:{color:'#7aa2f7'},children:\")\"}),/*#__PURE__*/_jsx(\"span\",{style:{color:'#a9b1d6'},children:\")\"}),\"\\n\",/*#__PURE__*/_jsx(\"span\",{style:{color:'#7aa2f7'},children:\"myList2\"}),\" \",/*#__PURE__*/_jsx(\"span\",{style:{color:'#c0caf5'},children:\"=\"}),\" \",/*#__PURE__*/_jsx(\"span\",{style:{color:'#ff9e64',fontWeight:'bold'},children:\"1\"}),/*#__PURE__*/_jsx(\"span\",{style:{color:'#c0caf5'},children:\":\"}),/*#__PURE__*/_jsx(\"span\",{style:{color:'#ff9e64',fontWeight:'bold'},children:\"2\"}),/*#__PURE__*/_jsx(\"span\",{style:{color:'#c0caf5'},children:\":\"}),/*#__PURE__*/_jsx(\"span\",{style:{color:'#ff9e64',fontWeight:'bold'},children:\"3\"}),/*#__PURE__*/_jsx(\"span\",{style:{color:'#c0caf5'},children:\":\"}),/*#__PURE__*/_jsx(\"span\",{style:{color:'#a9b1d6'},children:\"[]\"}),\"\\n\"]})}),/*#__PURE__*/_jsx(\"p\",{children:\"This does mean that we can construct values which can never resolve. For example: Void = Void VoidV:w\"}),/*#__PURE__*/_jsx(\"p\",{children:\"In haskell, data constructors don't need to take any variables, they can be of arrity 0. Therefore, constants can be defied like this\"}),/*#__PURE__*/_jsx(\"div\",{className:\"org-src-container\",children:/*#__PURE__*/_jsxs(\"pre\",{className:\"src src-haskell\",children:[/*#__PURE__*/_jsx(\"span\",{style:{color:'#bb9af7'},children:\"data\"}),\" \",/*#__PURE__*/_jsx(\"span\",{style:{color:'#c0caf5'},children:\"New_Constants\"}),\" \",/*#__PURE__*/_jsx(\"span\",{style:{color:'#c0caf5'},children:\"=\"}),\" \",/*#__PURE__*/_jsx(\"span\",{style:{color:'#c0caf5'},children:\"A\"}),\" \",/*#__PURE__*/_jsx(\"span\",{style:{color:'#c0caf5'},children:\"|\"}),\" \",/*#__PURE__*/_jsx(\"span\",{style:{color:'#c0caf5'},children:\"B\"}),\" \",/*#__PURE__*/_jsx(\"span\",{style:{color:'#c0caf5'},children:\"|\"}),\" \",/*#__PURE__*/_jsx(\"span\",{style:{color:'#c0caf5'},children:\"C\"}),\"\\n\",/*#__PURE__*/_jsx(\"span\",{style:{color:'#7aa2f7'},children:\"my_new_constant\"}),\" \",/*#__PURE__*/_jsx(\"span\",{style:{color:'#c0caf5'},children:\"=\"}),\" \",/*#__PURE__*/_jsx(\"span\",{style:{color:'#c0caf5'},children:\"A\"}),\" \",/*#__PURE__*/_jsx(\"span\",{style:{color:'#c0caf5'},children:\"::\"}),\" \",/*#__PURE__*/_jsx(\"span\",{style:{color:'#c0caf5'},children:\"New_Constants\"}),\"\\n\"]})}),/*#__PURE__*/_jsx(\"p\",{children:\"That is basically it. To recap:\"}),/*#__PURE__*/_jsxs(\"ol\",{className:\"org-ol\",children:[/*#__PURE__*/_jsx(\"li\",{children:\"Data in haskell can be of two primitive types: pairs and tagged-unions.\"}),/*#__PURE__*/_jsxs(\"li\",{children:[\"Pairs are declared using a single constructor and listing the types.\",/*#__PURE__*/_jsxs(\"ul\",{className:\"org-ul\",children:[/*#__PURE__*/_jsx(\"li\",{children:\"data Person = Person Int String\"}),/*#__PURE__*/_jsx(\"li\",{children:\"data Machine = MkMachine Int Int String\"})]})]}),/*#__PURE__*/_jsxs(\"li\",{children:[\"Tagged unions are created using\",\" \",/*#__PURE__*/_jsx(\"b\",{children:/*#__PURE__*/_jsx(\"b\",{children:\"|\"})}),\" \",\"and a constructor on the left and right of\",\" \",/*#__PURE__*/_jsx(\"b\",{children:/*#__PURE__*/_jsx(\"b\",{children:\"|\"})}),/*#__PURE__*/_jsx(\"ul\",{className:\"org-ul\",children:/*#__PURE__*/_jsx(\"li\",{children:\"data Car = Wheel String | Corpus Int\"})})]}),/*#__PURE__*/_jsx(\"li\",{children:\"Data can be recursive in haskell\"}),/*#__PURE__*/_jsxs(\"li\",{children:[\"Data constructors don't need to take any arguments, we can regard such constructors as values themselves\",/*#__PURE__*/_jsxs(\"ul\",{className:\"org-ul\",children:[/*#__PURE__*/_jsx(\"li\",{children:\"data Bool = True | False\"}),/*#__PURE__*/_jsx(\"li\",{children:\"data Maybe T = Just T | Nothing\"}),/*#__PURE__*/_jsx(\"li\",{children:\"data Options = Opt1 | Opt2 | Opt3\"})]})]})]})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{id:\"outline-container-org48e4310\",className:\"outline-2\",children:[/*#__PURE__*/_jsxs(\"h2\",{id:\"org48e4310\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"section-number-2\",children:\"2.\"}),\" \",\"My Category Theory Diagram\"]}),/*#__PURE__*/_jsx(\"div\",{className:\"outline-text-2\",id:\"text-2\",children:/*#__PURE__*/_jsx(\"div\",{className:\"org-src-container\",children:/*#__PURE__*/_jsxs(\"pre\",{className:\"src src-ditaa\",children:[\"+---------+\",\"\\n\",\"| cBLU\",\"    \",\"|\",\"\\n\",\"|\",\"         \",\"|\",\"\\n\",\"|\",\"    \",\"+----+\",\"\\n\",\"|\",\"    \",\"|cPNK|\",\"\\n\",\"|\",\"    \",\"|\",\"    \",\"|\",\"\\n\",\"+----+----+\",\"\\n\"]})})})]}),/*#__PURE__*/_jsxs(\"div\",{id:\"outline-container-org809995d\",className:\"outline-2\",children:[/*#__PURE__*/_jsxs(\"h2\",{id:\"org809995d\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"section-number-2\",children:\"3.\"}),\" \",\"Direct Sum Universal Property\"]}),/*#__PURE__*/_jsx(\"div\",{className:\"outline-text-2\",id:\"text-3\",children:/*#__PURE__*/_jsx(\"div\",{className:\"org-src-container\",children:/*#__PURE__*/_jsxs(\"pre\",{className:\"src src-ditaa\",children:[\"+-------+\",\"    \",\"+---------+\",\"    \",\"+-------+\",\"\\n\",\"|\",\"   \",\"A\",\"   \",\"|\",\"    \",\"|\",\"    \",\"B\",\"    \",\"|\",\"    \",\"|\",\"   \",\"C\",\"   \",\"|\",\"\\n\",\"+-------+\",\"    \",\"+---------+\",\"    \",\"+-------+\",\"\\n\",\"     \",\"^\",\"            \",\"^\",\"             \",\"^\",\"\\n\",\"     \",\"|\",\"            \",\"|\",\"             \",\"|\",\"\\n\",\"     \",\"|\",\"            \",\"|\",\"             \",\"|\",\"\\n\",\"     \",\"|\",\"            \",\"|\",\"             \",\"|\",\"\\n\",\"     \",\"+---+\",\"   \",\"+----+----+\",\"   \",\"+----+\",\"\\n\",\"     \",\"| \\u2295 |\",\"   \",\"|\",\"         \",\"|\",\"   \",\"| \\u2295 |\",\"\\n\",\"     \",\"+---+\",\"   \",\"|\",\"    \",\"X\",\"    \",\"|\",\"   \",\"+---+\",\"\\n\",\"             \",\"|\",\"         \",\"|\",\"\\n\",\"             \",\"+---------+\",\"\\n\",\"                \",\"D\",\"\\n\"]})})})]}),/*#__PURE__*/_jsxs(\"div\",{id:\"outline-container-orga1a13d0\",className:\"outline-2\",children:[/*#__PURE__*/_jsxs(\"h2\",{id:\"orga1a13d0\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"section-number-2\",children:\"4.\"}),\" Using a tikz picture\"]}),/*#__PURE__*/_jsxs(\"div\",{className:\"outline-text-2\",id:\"text-4\",children:[/*#__PURE__*/_jsx(\"div\",{id:\"org79d51e1\",className:\"figure\",children:/*#__PURE__*/_jsx(\"p\",{children:/*#__PURE__*/_jsx(\"img\",{src:TikzPicture,alt:\"mytikzpicture.png\",width:\"200px\"})})}),/*#__PURE__*/_jsx(\"p\",{children:\"That's it! You can customize the diagram further by referring to the `tikz-cd` documentation and adjusting the options as needed.\"})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{id:\"postamble\",className:\"status\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"author\",children:\"Author: Delyan Kirov\"}),/*#__PURE__*/_jsx(\"p\",{className:\"date\",children:\"Created: 2023-12-21 Thu 18:21\"}),/*#__PURE__*/_jsx(\"p\",{className:\"validation\",children:/*#__PURE__*/_jsx(\"a\",{href:\"https://validator.w3.org/check?uri=referer\",children:\"Validate\"})})]})]});};export default FullPanel1;","map":{"version":3,"names":["React","TopBar","TikzPicture","jsx","_jsx","jsxs","_jsxs","FullPanel1","className","children","style","margin","id","color","fontWeight","src","alt","width","href"],"sources":["/home/dk/Documents/Projects/PersonalSite/src/components/FullPanel1/FullPanel1.tsx"],"sourcesContent":["import React, {} from \"react\";\nimport \"./Styles.css\";\nimport { motion, useScroll } from \"framer-motion\";\nimport TopBar from \"../TopBar/TopBar\";\nimport TikzPicture from \"./mytikzpicture.png\"\n\nconst FullPanel1 = () => {\n  return (\n    <div className=\"blogBody\">\n      <div className=\"TopBar\">\n        <TopBar />\n      </div>\n        <div style={{ margin: '36px' }}></div>\n      <div id=\"content\" className=\"content\">\n        <h1 className=\"title\">Using tikz in org</h1>\n        <div id=\"outline-container-orgcc7d50f\" className=\"outline-2\">\n          <h2 id=\"orgcc7d50f\">\n            <span className=\"section-number-2\">1.</span> Haskell basics\n          </h2>\n          <div className=\"outline-text-2\" id=\"text-1\">\n          </div>\n          <div id=\"outline-container-org1a868d1\" className=\"outline-3\">\n            <h3 id=\"org1a868d1\">\n              <span className=\"section-number-3\">1.1.</span> Types and variables\n            </h3>\n            <div className=\"outline-text-3\" id=\"text-1-1\">\n              <p>\n                Haskell is simple, there are Types and variables of those types.\n              </p>\n              <div className=\"org-src-container\">\n                <pre className=\"src src-haskell\"><span style={{color: '#51587a'}}>-- </span><span style={{color: '#51587a'}}>Assigning 1 to a</span>{\"\\n\"}<span style={{color: '#7aa2f7'}}>a</span> <span style={{color: '#c0caf5'}}>=</span> <span style={{color: '#ff9e64', fontWeight: 'bold'}}>1</span> <span style={{color: '#c0caf5'}}>::</span> <span style={{color: '#c0caf5'}}>Int</span>{\"\\n\"}<span style={{color: '#51587a'}}>-- </span><span style={{color: '#51587a'}}>We can omit the type declaration</span>{\"\\n\"}<span style={{color: '#7aa2f7'}}>b</span> <span style={{color: '#c0caf5'}}>=</span> <span style={{color: '#ff9e64', fontWeight: 'bold'}}>1</span>{\"\\n\"}<span style={{color: '#51587a'}}>-- </span><span style={{color: '#51587a'}}>We can also define the type</span>{\"\\n\"}<span style={{color: '#7aa2f7'}}>c</span> <span style={{color: '#c0caf5'}}>::</span> <span style={{color: '#c0caf5'}}>Int</span>{\"\\n\"}<span style={{color: '#51587a'}}>-- </span><span style={{color: '#51587a'}}>and assign latter</span>{\"\\n\"}<span style={{color: '#7aa2f7'}}>c</span> <span style={{color: '#c0caf5'}}>=</span> <span style={{color: '#ff9e64', fontWeight: 'bold'}}>1</span>{\"\\n\"}</pre>\n              </div>\n              <p>\n                What about functions? Those are not too special, functions are\n                values of type Input -&gt; Output\n              </p>\n              <div className=\"org-src-container\">\n                <pre className=\"src src-haskell\"><span style={{color: '#51587a'}}>-- </span><span style={{color: '#51587a'}}>Anotate and define</span>{\"\\n\"}<span style={{color: '#7aa2f7'}}>f</span> <span style={{color: '#c0caf5'}}>::</span> <span style={{color: '#c0caf5'}}>Int</span> <span style={{color: '#c0caf5'}}>-&gt;</span> <span style={{color: '#c0caf5'}}>Int</span>{\"\\n\"}<span style={{color: '#7aa2f7'}}>f</span> x <span style={{color: '#c0caf5'}}>=</span> x <span style={{color: '#c0caf5'}}>+</span> <span style={{color: '#ff9e64', fontWeight: 'bold'}}>1</span>{\"\\n\"}<span style={{color: '#51587a'}}>-- </span><span style={{color: '#51587a'}}>Define without anotating</span>{\"\\n\"}<span style={{color: '#7aa2f7'}}>g</span> x <span style={{color: '#c0caf5'}}>=</span> x <span style={{color: '#c0caf5'}}>+</span> <span style={{color: '#ff9e64', fontWeight: 'bold'}}>1</span>{\"\\n\"}</pre>\n              </div>\n              <p>\n                You can think of -&gt; as a type constructor. Other type\n                constructors pre-built are\n              </p>\n              <div className=\"org-src-container\">\n                <pre className=\"src src-haskell\"><span style={{color: '#51587a'}}>-- </span><span style={{color: '#51587a'}}>The pair constructor</span>{\"\\n\"}<span style={{color: '#7aa2f7'}}>a</span> <span style={{color: '#c0caf5'}}>=</span> <span style={{color: '#a9b1d6'}}>(</span><span style={{color: '#c0caf5'}}>,</span><span style={{color: '#a9b1d6'}}>)</span> <span style={{color: '#ff9e64', fontWeight: 'bold'}}>1</span>, <span style={{color: '#ff9e64', fontWeight: 'bold'}}>2</span>{\"\\n\"}{\"\\n\"}<span style={{color: '#51587a'}}>-- </span><span style={{color: '#51587a'}}>We can also use it to define triples</span>{\"\\n\"}<span style={{color: '#7aa2f7'}}>b</span> <span style={{color: '#c0caf5'}}>=</span> <span style={{color: '#a9b1d6'}}>(</span><span style={{color: '#c0caf5'}}>,</span><span style={{color: '#a9b1d6'}}>)</span> <span style={{color: '#a9b1d6'}}>(</span> <span style={{color: '#7aa2f7'}}>(</span><span style={{color: '#c0caf5'}}>,</span><span style={{color: '#7aa2f7'}}>)</span> <span style={{color: '#ff9e64', fontWeight: 'bold'}}>1</span> <span style={{color: '#ff9e64', fontWeight: 'bold'}}>2</span><span style={{color: '#a9b1d6'}}>)</span> <span style={{color: '#ff9e64', fontWeight: 'bold'}}>3</span>{\"\\n\"}{\"\\n\"}<span style={{color: '#51587a'}}>-- </span><span style={{color: '#51587a'}}>These constructors also have sugarful declarations</span>{\"\\n\"}<span style={{color: '#7aa2f7'}}>a'</span> <span style={{color: '#c0caf5'}}>=</span> <span style={{color: '#a9b1d6'}}>(</span><span style={{color: '#ff9e64', fontWeight: 'bold'}}>1</span>, <span style={{color: '#ff9e64', fontWeight: 'bold'}}>2</span><span style={{color: '#a9b1d6'}}>)</span>{\"\\n\"}<span style={{color: '#7aa2f7'}}>b'</span> <span style={{color: '#c0caf5'}}>=</span> <span style={{color: '#a9b1d6'}}>(</span><span style={{color: '#ff9e64', fontWeight: 'bold'}}>1</span>, <span style={{color: '#ff9e64', fontWeight: 'bold'}}>2</span>, <span style={{color: '#ff9e64', fontWeight: 'bold'}}>3</span><span style={{color: '#a9b1d6'}}>)</span>{\"\\n\"}{\"\\n\"}<span style={{color: '#51587a'}}>-- </span><span style={{color: '#51587a'}}>Lists can be constructed with :</span>{\"\\n\"}<span style={{color: '#7aa2f7'}}>foo</span> <span style={{color: '#c0caf5'}}>=</span> <span style={{color: '#ff9e64', fontWeight: 'bold'}}>1</span><span style={{color: '#c0caf5'}}>:</span><span style={{color: '#ff9e64', fontWeight: 'bold'}}>2</span><span style={{color: '#c0caf5'}}>:</span><span style={{color: '#ff9e64', fontWeight: 'bold'}}>3</span><span style={{color: '#c0caf5'}}>:</span><span style={{color: '#a9b1d6'}}>[]</span>{\"\\n\"}<span style={{color: '#51587a'}}>-- </span><span style={{color: '#51587a'}}>We also have sugarful notation</span>{\"\\n\"}<span style={{color: '#7aa2f7'}}>foo'</span> <span style={{color: '#c0caf5'}}>=</span> <span style={{color: '#a9b1d6'}}>[</span><span style={{color: '#ff9e64', fontWeight: 'bold'}}>1</span>, <span style={{color: '#ff9e64', fontWeight: 'bold'}}>2</span>, <span style={{color: '#ff9e64', fontWeight: 'bold'}}>3</span><span style={{color: '#a9b1d6'}}>]</span>{\"\\n\"}</pre>\n              </div>\n              <p>\n                In general we can define custom pairs, using the{\" \"}\n                <b>\n                  <b>data</b>\n                </b>{\" \"}\n                key word\n              </p>\n              <div className=\"org-src-container\">\n                <pre className=\"src src-haskell\"><span style={{color: '#51587a'}}>-- </span><span style={{color: '#51587a'}}>Here we use data to start constructing</span>{\"\\n\"}<span style={{color: '#bb9af7'}}>data</span> <span style={{color: '#c0caf5'}}>Person</span> <span style={{color: '#c0caf5'}}>=</span> <span style={{color: '#c0caf5'}}>Person</span> <span style={{color: '#c0caf5'}}>Int</span> <span style={{color: '#c0caf5'}}>String</span>{\"\\n\"}<span style={{color: '#51587a'}}>-- </span><span style={{color: '#51587a'}}>The constructor of the type Person is a function called Person</span>{\"\\n\"}<span style={{color: '#51587a'}}>-- </span><span style={{color: '#51587a'}}>It takes two parameters, an integer and a string and produces a person</span>{\"\\n\"}{\"\\n\"}<span style={{color: '#51587a'}}>-- </span><span style={{color: '#51587a'}}>We can of course create a variable of type person{\"  \"}</span>{\"\\n\"}<span style={{color: '#7aa2f7'}}>newPerson</span> <span style={{color: '#c0caf5'}}>=</span> <span style={{color: '#c0caf5'}}>Person</span> <span style={{color: '#ff9e64', fontWeight: 'bold'}}>21</span> <span style={{color: '#9ece6a'}}>\"John\"</span>{\"\\n\"}{\"\\n\"}<span style={{color: '#51587a'}}>-- </span><span style={{color: '#51587a'}}>It's often convenient to give accessing functions, records can be used for this.</span>{\"\\n\"}<span style={{color: '#51587a'}}>-- </span><span style={{color: '#51587a'}}>Instead of the following:</span>{\"\\n\"}<span style={{color: '#7aa2f7'}}>person_name</span> <span style={{color: '#c0caf5'}}>Person</span> age name <span style={{color: '#c0caf5'}}>=</span> name{\"\\n\"}<span style={{color: '#7aa2f7'}}>person_age</span> <span style={{color: '#c0caf5'}}>Person</span> age name <span style={{color: '#c0caf5'}}>=</span> age{\"\\n\"}{\"\\n\"}<span style={{color: '#51587a'}}>-- </span><span style={{color: '#51587a'}}>We can just define them right away:</span>{\"\\n\"}<span style={{color: '#bb9af7'}}>data</span> <span style={{color: '#c0caf5'}}>Human</span> <span style={{color: '#c0caf5'}}>=</span> <span style={{color: '#c0caf5'}}>Human</span> <span style={{color: '#a9b1d6'}}>{\"{\"}</span>{\"  \"}age{\"  \"}<span style={{color: '#c0caf5'}}>::</span> <span style={{color: '#c0caf5'}}>Int</span>{\"\\n\"}{\"                          \"}, name <span style={{color: '#c0caf5'}}>::</span> <span style={{color: '#c0caf5'}}>String</span> <span style={{color: '#a9b1d6'}}>{\"}\"}</span>{\"\\n\"}</pre>\n              </div>\n              <p>\n                Instead of just pairs, we can also define so called tagged\n                unions. These are like a union of types, except that each type\n                in the union needs it's own named constructor. For example,{\" \"}\n                <b>\n                  <b>Foo = Bar Int | Baz</b>\n                </b>{\" \"}\n                Double. In this examole, a variable{\" \"}\n                <b>\n                  <b>foo :: Foo</b>\n                </b>{\" \"}\n                is either a Bar Int or a Baz Double, not both. Note that the\n                constructors Baz and Bar distinguish what is the left and right\n                value. So{\" \"}\n                <b>\n                  <b>foo = Bar 1</b>\n                </b>, does not mean that{\" \"}\n                <b>\n                  <b>foo</b>\n                </b>{\" \"}\n                is of type Int, or of type Bar Int. If you have{\" \"}\n                <b>\n                  <b>data Myvar = LeftVar Int | RightVar Int</b>\n                </b>, then the left integer is distinct from the right.\n                Therefore, it's better to think of tagged unions as generating\n                multi-sets, where different values of the same type are\n                distinguished by constructors. In haskell, types can be\n                recursive, this makes it possible to define lists as follows:\n              </p>\n              <div className=\"org-src-container\">\n                <pre className=\"src src-haskell\"><span style={{color: '#bb9af7'}}>data</span> <span style={{color: '#a9b1d6'}}>[</span><span style={{color: '#c0caf5'}}>A</span><span style={{color: '#a9b1d6'}}>]</span> <span style={{color: '#c0caf5'}}>=</span> <span style={{color: '#a9b1d6'}}>[]</span> <span style={{color: '#c0caf5'}}>|</span> cons <span style={{color: '#a9b1d6'}}>(</span>a <span style={{color: '#c0caf5'}}>::</span> <span style={{color: '#c0caf5'}}>A</span><span style={{color: '#a9b1d6'}}>)</span>{\"\\n\"}<span style={{color: '#51587a'}}>-- </span><span style={{color: '#51587a'}}>The cons constructor is replaced by the operator :</span>{\"\\n\"}<span style={{color: '#7aa2f7'}}>cons</span> a rest <span style={{color: '#c0caf5'}}>=</span> a<span style={{color: '#c0caf5'}}>:</span>rest{\"\\n\"}<span style={{color: '#51587a'}}>-- </span><span style={{color: '#51587a'}}>Here are some examples</span>{\"\\n\"}<span style={{color: '#7aa2f7'}}>myList1</span> <span style={{color: '#c0caf5'}}>=</span> <span style={{color: '#a9b1d6'}}>(</span>cons <span style={{color: '#ff9e64', fontWeight: 'bold'}}>1</span> <span style={{color: '#7aa2f7'}}>(</span>cons <span style={{color: '#ff9e64', fontWeight: 'bold'}}>2</span> <span style={{color: '#ff9e64'}}>(</span>cons <span style={{color: '#ff9e64', fontWeight: 'bold'}}>3</span> <span style={{color: '#73daca'}}>[]</span><span style={{color: '#ff9e64'}}>)</span><span style={{color: '#7aa2f7'}}>)</span><span style={{color: '#a9b1d6'}}>)</span>{\"\\n\"}<span style={{color: '#7aa2f7'}}>myList2</span> <span style={{color: '#c0caf5'}}>=</span> <span style={{color: '#ff9e64', fontWeight: 'bold'}}>1</span><span style={{color: '#c0caf5'}}>:</span><span style={{color: '#ff9e64', fontWeight: 'bold'}}>2</span><span style={{color: '#c0caf5'}}>:</span><span style={{color: '#ff9e64', fontWeight: 'bold'}}>3</span><span style={{color: '#c0caf5'}}>:</span><span style={{color: '#a9b1d6'}}>[]</span>{\"\\n\"}</pre>\n              </div>\n              <p>\n                This does mean that we can construct values which can never\n                resolve. For example: Void = Void VoidV:w\n              </p>\n              <p>\n                In haskell, data constructors don't need to take any variables,\n                they can be of arrity 0. Therefore, constants can be defied like\n                this\n              </p>\n              <div className=\"org-src-container\">\n                <pre className=\"src src-haskell\"><span style={{color: '#bb9af7'}}>data</span> <span style={{color: '#c0caf5'}}>New_Constants</span> <span style={{color: '#c0caf5'}}>=</span> <span style={{color: '#c0caf5'}}>A</span> <span style={{color: '#c0caf5'}}>|</span> <span style={{color: '#c0caf5'}}>B</span> <span style={{color: '#c0caf5'}}>|</span> <span style={{color: '#c0caf5'}}>C</span>{\"\\n\"}<span style={{color: '#7aa2f7'}}>my_new_constant</span> <span style={{color: '#c0caf5'}}>=</span> <span style={{color: '#c0caf5'}}>A</span> <span style={{color: '#c0caf5'}}>::</span> <span style={{color: '#c0caf5'}}>New_Constants</span>{\"\\n\"}</pre>\n              </div>\n              <p>\n                That is basically it. To recap:\n              </p>\n              <ol className=\"org-ol\">\n                <li>\n                  Data in haskell can be of two primitive types: pairs and\n                  tagged-unions.\n                </li>\n                <li>\n                  Pairs are declared using a single constructor and listing the\n                  types.\n                  <ul className=\"org-ul\">\n                    <li>data Person = Person Int String</li>\n                    <li>data Machine = MkMachine Int Int String</li>\n                  </ul>\n                </li>\n                <li>\n                  Tagged unions are created using{\" \"}\n                  <b>\n                    <b>|</b>\n                  </b>{\" \"}\n                  and a constructor on the left and right of{\" \"}\n                  <b>\n                    <b>|</b>\n                  </b>\n                  <ul className=\"org-ul\">\n                    <li>data Car = Wheel String | Corpus Int</li>\n                  </ul>\n                </li>\n                <li>Data can be recursive in haskell</li>\n                <li>\n                  Data constructors don't need to take any arguments, we can\n                  regard such constructors as values themselves\n                  <ul className=\"org-ul\">\n                    <li>data Bool = True | False</li>\n                    <li>data Maybe T = Just T | Nothing</li>\n                    <li>data Options = Opt1 | Opt2 | Opt3</li>\n                  </ul>\n                </li>\n              </ol>\n            </div>\n          </div>\n        </div>\n        <div id=\"outline-container-org48e4310\" className=\"outline-2\">\n          <h2 id=\"org48e4310\">\n            <span className=\"section-number-2\">2.</span>{\" \"}\n            My Category Theory Diagram\n          </h2>\n          <div className=\"outline-text-2\" id=\"text-2\">\n            <div className=\"org-src-container\">\n              <pre className=\"src src-ditaa\">+---------+{\"\\n\"}| cBLU{\"    \"}|{\"\\n\"}|{\"         \"}|{\"\\n\"}|{\"    \"}+----+{\"\\n\"}|{\"    \"}|cPNK|{\"\\n\"}|{\"    \"}|{\"    \"}|{\"\\n\"}+----+----+{\"\\n\"}</pre>\n            </div>\n          </div>\n        </div>\n        <div id=\"outline-container-org809995d\" className=\"outline-2\">\n          <h2 id=\"org809995d\">\n            <span className=\"section-number-2\">3.</span>{\" \"}\n            Direct Sum Universal Property\n          </h2>\n          <div className=\"outline-text-2\" id=\"text-3\">\n            <div className=\"org-src-container\">\n              <pre className=\"src src-ditaa\">+-------+{\"    \"}+---------+{\"    \"}+-------+{\"\\n\"}|{\"   \"}A{\"   \"}|{\"    \"}|{\"    \"}B{\"    \"}|{\"    \"}|{\"   \"}C{\"   \"}|{\"\\n\"}+-------+{\"    \"}+---------+{\"    \"}+-------+{\"\\n\"}{\"     \"}^{\"            \"}^{\"             \"}^{\"\\n\"}{\"     \"}|{\"            \"}|{\"             \"}|{\"\\n\"}{\"     \"}|{\"            \"}|{\"             \"}|{\"\\n\"}{\"     \"}|{\"            \"}|{\"             \"}|{\"\\n\"}{\"     \"}+---+{\"   \"}+----+----+{\"   \"}+----+{\"\\n\"}{\"     \"}| ⊕ |{\"   \"}|{\"         \"}|{\"   \"}| ⊕ |{\"\\n\"}{\"     \"}+---+{\"   \"}|{\"    \"}X{\"    \"}|{\"   \"}+---+{\"\\n\"}{\"             \"}|{\"         \"}|{\"\\n\"}{\"             \"}+---------+{\"\\n\"}{\"                \"}D{\"\\n\"}</pre>\n            </div>\n          </div>\n        </div>\n        <div id=\"outline-container-orga1a13d0\" className=\"outline-2\">\n          <h2 id=\"orga1a13d0\">\n            <span className=\"section-number-2\">4.</span> Using a tikz picture\n          </h2>\n          <div className=\"outline-text-2\" id=\"text-4\">\n            <div id=\"org79d51e1\" className=\"figure\">\n              <p>\n                <img\n                  src={TikzPicture}\n                  alt=\"mytikzpicture.png\"\n                  width=\"200px\"\n                />\n              </p>\n            </div>\n            <p>\n              That's it! You can customize the diagram further by referring to\n              the `tikz-cd` documentation and adjusting the options as needed.\n            </p>\n          </div>\n        </div>\n      </div>\n      <div id=\"postamble\" className=\"status\">\n        <p className=\"author\">Author: Delyan Kirov</p>\n        <p className=\"date\">Created: 2023-12-21 Thu 18:21</p>\n        <p className=\"validation\">\n          <a href=\"https://validator.w3.org/check?uri=referer\">Validate</a>\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default FullPanel1;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}