{"ast":null,"code":"var _jsxFileName = \"/home/dylan/Documents/Projects/flash-cards/src/components/Dash/Dash.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './Dash.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst calculateRowCount = text => {\n  const lineHeight = 16; // Adjust this value based on your font and styling\n  const minHeight = 32; // Minimum height for one row\n  const lines = text.split('\\n').length;\n  const rowCount = Math.max(minHeight / lineHeight, lines);\n  return rowCount;\n};\nfunction Dash() {\n  _s();\n  const [inputText, setInputText] = useState('');\n  const handleInputChange = e => {\n    setInputText(e.target.value);\n  };\n  const rowCount = calculateRowCount(inputText);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dash\",\n    children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n      rows: rowCount,\n      placeholder: \"Type text here...\",\n      value: inputText,\n      onChange: handleInputChange,\n      className: \"textarea\",\n      style: {\n        overflowY: 'hidden'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n_s(Dash, \"wAh2Cv8Kk70PfbjrJimBRYwxb6g=\");\n_c = Dash;\nexport default Dash;\nvar _c;\n$RefreshReg$(_c, \"Dash\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","calculateRowCount","text","lineHeight","minHeight","lines","split","length","rowCount","Math","max","Dash","_s","inputText","setInputText","handleInputChange","e","target","value","className","children","rows","placeholder","onChange","style","overflowY","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/dylan/Documents/Projects/flash-cards/src/components/Dash/Dash.tsx"],"sourcesContent":["import React, { useRef, useState } from 'react';\nimport './Dash.css';\n\nconst calculateRowCount = (text: string) => {\n  const lineHeight = 16; // Adjust this value based on your font and styling\n  const minHeight = 32; // Minimum height for one row\n  const lines = text.split('\\n').length;\n  const rowCount = Math.max(minHeight / lineHeight, lines);\n  return rowCount;\n};\n\nfunction Dash() {\n  const [inputText, setInputText] = useState<string>('');\n\n  const handleInputChange = (e: React.ChangeEvent<HTMLTextAreaElement>) => {\n    setInputText(e.target.value);\n  };\n\n  const rowCount = calculateRowCount(inputText);\n\n  return (\n    <div className=\"dash\">\n      <textarea\n        rows={rowCount}\n        placeholder=\"Type text here...\"\n        value={inputText}\n        onChange={handleInputChange}\n        className=\"textarea\"\n        style={{ overflowY: 'hidden' }}\n      ></textarea>\n    </div>\n  );\n}\n\nexport default Dash;"],"mappings":";;AAAA,OAAOA,KAAK,IAAYC,QAAQ,QAAQ,OAAO;AAC/C,OAAO,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpB,MAAMC,iBAAiB,GAAIC,IAAY,IAAK;EAC1C,MAAMC,UAAU,GAAG,EAAE,CAAC,CAAC;EACvB,MAAMC,SAAS,GAAG,EAAE,CAAC,CAAC;EACtB,MAAMC,KAAK,GAAGH,IAAI,CAACI,KAAK,CAAC,IAAI,CAAC,CAACC,MAAM;EACrC,MAAMC,QAAQ,GAAGC,IAAI,CAACC,GAAG,CAACN,SAAS,GAAGD,UAAU,EAAEE,KAAK,CAAC;EACxD,OAAOG,QAAQ;AACjB,CAAC;AAED,SAASG,IAAIA,CAAA,EAAG;EAAAC,EAAA;EACd,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGhB,QAAQ,CAAS,EAAE,CAAC;EAEtD,MAAMiB,iBAAiB,GAAIC,CAAyC,IAAK;IACvEF,YAAY,CAACE,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAC9B,CAAC;EAED,MAAMV,QAAQ,GAAGP,iBAAiB,CAACY,SAAS,CAAC;EAE7C,oBACEb,OAAA;IAAKmB,SAAS,EAAC,MAAM;IAAAC,QAAA,eACnBpB,OAAA;MACEqB,IAAI,EAAEb,QAAS;MACfc,WAAW,EAAC,mBAAmB;MAC/BJ,KAAK,EAAEL,SAAU;MACjBU,QAAQ,EAAER,iBAAkB;MAC5BI,SAAS,EAAC,UAAU;MACpBK,KAAK,EAAE;QAAEC,SAAS,EAAE;MAAS;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACT,CAAC;AAEV;AAACjB,EAAA,CArBQD,IAAI;AAAAmB,EAAA,GAAJnB,IAAI;AAuBb,eAAeA,IAAI;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}